# Base class: Vehicle
class Vehicle:
    def __init__(self, make, model):
        self.make = make
        self.model = model

    def display_info(self):
        print(f"Make: {self.make}")
        print(f"Model: {self.model}")

# Derived class: Car
class Car(Vehicle):
    def __init__(self, make, model, year, num_doors):
        super().__init__(make, model)  # Call the constructor of the base class
        self.year = year
        self.num_doors = num_doors

    def display_info(self):
        super().display_info()  # Call the base class's display_info method
        print(f"Year: {self.year}")
        print(f"Number of Doors: {self.num_doors}")

# Derived class: Motorcycle
class Motorcycle(Vehicle):
    def __init__(self, make, model, year, engine_type):
        super().__init__(make, model)  # Call the constructor of the base class
        self.year = year
        self.engine_type = engine_type

    def display_info(self):
        super().display_info()  # Call the base class's display_info method
        print(f"Year: {self.year}")
        print(f"Engine Type: {self.engine_type}")

# Create instances of the derived classes
car1 = Car("Toyota", "Camry", 2022, 4)
motorcycle1 = Motorcycle("Harley-Davidson", "Sportster", 2021, "V-Twin")

# Display information about the vehicles
print("Car Information:")
car1.display_info()
print("\nMotorcycle Information:")
motorcycle1.display_info()
